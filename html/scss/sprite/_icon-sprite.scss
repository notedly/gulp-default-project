// SCSS variables are information about icon's compiled state, stored under its original file name
//
// .icon-home {
//   width: $icon-home-width;
// }
//
// The large array-like variables contain all information about a single icon
// $icon-home: x y offset_x offset_y width height total_width total_height image_path;
//
// At the bottom of this section, we provide information about the spritesheet itself
// $spritesheet: width height image $spritesheet-sprites;
$icon-arr-btn-right-01-name: 'icon-arr_btn_right_01';
$icon-arr-btn-right-01-x: 79px;
$icon-arr-btn-right-01-y: 37px;
$icon-arr-btn-right-01-offset-x: -79px;
$icon-arr-btn-right-01-offset-y: -37px;
$icon-arr-btn-right-01-width: 6px;
$icon-arr-btn-right-01-height: 12px;
$icon-arr-btn-right-01-total-width: 87px;
$icon-arr-btn-right-01-total-height: 71px;
$icon-arr-btn-right-01-image: '../images/sprite/icon.png';
$icon-arr-btn-right-01: (79px, 37px, -79px, -37px, 6px, 12px, 87px, 71px, '../images/sprite/icon.png', 'icon-arr_btn_right_01', );
$icon-btn-mob-menu-name: 'icon-btn_mob_menu';
$icon-btn-mob-menu-x: 44px;
$icon-btn-mob-menu-y: 37px;
$icon-btn-mob-menu-offset-x: -44px;
$icon-btn-mob-menu-offset-y: -37px;
$icon-btn-mob-menu-width: 25px;
$icon-btn-mob-menu-height: 25px;
$icon-btn-mob-menu-total-width: 87px;
$icon-btn-mob-menu-total-height: 71px;
$icon-btn-mob-menu-image: '../images/sprite/icon.png';
$icon-btn-mob-menu: (44px, 37px, -44px, -37px, 25px, 25px, 87px, 71px, '../images/sprite/icon.png', 'icon-btn_mob_menu', );
$icon-btn-share-facebook-name: 'icon-btn_share_facebook';
$icon-btn-share-facebook-x: 0px;
$icon-btn-share-facebook-y: 37px;
$icon-btn-share-facebook-offset-x: 0px;
$icon-btn-share-facebook-offset-y: -37px;
$icon-btn-share-facebook-width: 34px;
$icon-btn-share-facebook-height: 34px;
$icon-btn-share-facebook-total-width: 87px;
$icon-btn-share-facebook-total-height: 71px;
$icon-btn-share-facebook-image: '../images/sprite/icon.png';
$icon-btn-share-facebook: (0px, 37px, 0px, -37px, 34px, 34px, 87px, 71px, '../images/sprite/icon.png', 'icon-btn_share_facebook', );
$icon-logo-footer-name: 'icon-logo_footer';
$icon-logo-footer-x: 0px;
$icon-logo-footer-y: 0px;
$icon-logo-footer-offset-x: 0px;
$icon-logo-footer-offset-y: 0px;
$icon-logo-footer-width: 87px;
$icon-logo-footer-height: 27px;
$icon-logo-footer-total-width: 87px;
$icon-logo-footer-total-height: 71px;
$icon-logo-footer-image: '../images/sprite/icon.png';
$icon-logo-footer: (0px, 0px, 0px, 0px, 87px, 27px, 87px, 71px, '../images/sprite/icon.png', 'icon-logo_footer', );
$icon-arr-btn-right-01-2x-name: 'icon-arr_btn_right_01@2x';
$icon-arr-btn-right-01-2x-x: 158px;
$icon-arr-btn-right-01-2x-y: 74px;
$icon-arr-btn-right-01-2x-offset-x: -158px;
$icon-arr-btn-right-01-2x-offset-y: -74px;
$icon-arr-btn-right-01-2x-width: 12px;
$icon-arr-btn-right-01-2x-height: 24px;
$icon-arr-btn-right-01-2x-total-width: 174px;
$icon-arr-btn-right-01-2x-total-height: 142px;
$icon-arr-btn-right-01-2x-image: '../images/sprite/icon@2x.png';
$icon-arr-btn-right-01-2x: (158px, 74px, -158px, -74px, 12px, 24px, 174px, 142px, '../images/sprite/icon@2x.png', 'icon-arr_btn_right_01@2x', );
$icon-btn-mob-menu-2x-name: 'icon-btn_mob_menu@2x';
$icon-btn-mob-menu-2x-x: 88px;
$icon-btn-mob-menu-2x-y: 74px;
$icon-btn-mob-menu-2x-offset-x: -88px;
$icon-btn-mob-menu-2x-offset-y: -74px;
$icon-btn-mob-menu-2x-width: 50px;
$icon-btn-mob-menu-2x-height: 50px;
$icon-btn-mob-menu-2x-total-width: 174px;
$icon-btn-mob-menu-2x-total-height: 142px;
$icon-btn-mob-menu-2x-image: '../images/sprite/icon@2x.png';
$icon-btn-mob-menu-2x: (88px, 74px, -88px, -74px, 50px, 50px, 174px, 142px, '../images/sprite/icon@2x.png', 'icon-btn_mob_menu@2x', );
$icon-btn-share-facebook-2x-name: 'icon-btn_share_facebook@2x';
$icon-btn-share-facebook-2x-x: 0px;
$icon-btn-share-facebook-2x-y: 74px;
$icon-btn-share-facebook-2x-offset-x: 0px;
$icon-btn-share-facebook-2x-offset-y: -74px;
$icon-btn-share-facebook-2x-width: 68px;
$icon-btn-share-facebook-2x-height: 68px;
$icon-btn-share-facebook-2x-total-width: 174px;
$icon-btn-share-facebook-2x-total-height: 142px;
$icon-btn-share-facebook-2x-image: '../images/sprite/icon@2x.png';
$icon-btn-share-facebook-2x: (0px, 74px, 0px, -74px, 68px, 68px, 174px, 142px, '../images/sprite/icon@2x.png', 'icon-btn_share_facebook@2x', );
$icon-logo-footer-2x-name: 'icon-logo_footer@2x';
$icon-logo-footer-2x-x: 0px;
$icon-logo-footer-2x-y: 0px;
$icon-logo-footer-2x-offset-x: 0px;
$icon-logo-footer-2x-offset-y: 0px;
$icon-logo-footer-2x-width: 174px;
$icon-logo-footer-2x-height: 54px;
$icon-logo-footer-2x-total-width: 174px;
$icon-logo-footer-2x-total-height: 142px;
$icon-logo-footer-2x-image: '../images/sprite/icon@2x.png';
$icon-logo-footer-2x: (0px, 0px, 0px, 0px, 174px, 54px, 174px, 142px, '../images/sprite/icon@2x.png', 'icon-logo_footer@2x', );
$icon-width: 87px;
$icon-height: 71px;
$icon-image: '../images/sprite/icon.png';
$icon-sprites: ($icon-arr-btn-right-01, $icon-btn-mob-menu, $icon-btn-share-facebook, $icon-logo-footer, );
$icon: (87px, 71px, '../images/sprite/icon.png', $icon-sprites, );
$retina-spritesheet-width: 174px;
$retina-spritesheet-height: 142px;
$retina-spritesheet-image: '../images/sprite/icon@2x.png';
$retina-spritesheet-sprites: ($icon-arr-btn-right-01-2x, $icon-btn-mob-menu-2x, $icon-btn-share-facebook-2x, $icon-logo-footer-2x, );
$retina-spritesheet: (174px, 142px, '../images/sprite/icon@2x.png', $retina-spritesheet-sprites, );

// These "retina group" variables are mappings for the naming and pairing of normal and retina sprites.
//
// The list formatted variables are intended for mixins like `retina-sprite` and `retina-sprites`.
$icon-arr-btn-right-01-group-name: 'icon-arr_btn_right_01';
$icon-arr-btn-right-01-group: ('icon-arr_btn_right_01', $icon-arr-btn-right-01, $icon-arr-btn-right-01-2x, );
$icon-btn-mob-menu-group-name: 'icon-btn_mob_menu';
$icon-btn-mob-menu-group: ('icon-btn_mob_menu', $icon-btn-mob-menu, $icon-btn-mob-menu-2x, );
$icon-btn-share-facebook-group-name: 'icon-btn_share_facebook';
$icon-btn-share-facebook-group: ('icon-btn_share_facebook', $icon-btn-share-facebook, $icon-btn-share-facebook-2x, );
$icon-logo-footer-group-name: 'icon-logo_footer';
$icon-logo-footer-group: ('icon-logo_footer', $icon-logo-footer, $icon-logo-footer-2x, );
$retina-groups: ($icon-arr-btn-right-01-group, $icon-btn-mob-menu-group, $icon-btn-share-facebook-group, $icon-logo-footer-group, );

// The provided mixins are intended to be used with the array-like variables
//
// .icon-home {
//   @include sprite-width($icon-home);
// }
//
// .icon-email {
//   @include sprite($icon-email);
// }
//
// Example usage in HTML:
//
// `display: block` sprite:
// <div class="icon-home"></div>
//
// To change `display` (e.g. `display: inline-block;`), we suggest using a common CSS class:
//
// // CSS
// .icon {
//   display: inline-block;
// }
//
// // HTML
// <i class="icon icon-home"></i>
@mixin sprite-width($sprite) {
  width: nth($sprite, 5);
}

@mixin sprite-height($sprite) {
  height: nth($sprite, 6);
}

@mixin sprite-position($sprite) {
  $sprite-offset-x: nth($sprite, 3);
  $sprite-offset-y: nth($sprite, 4);
  background-position: $sprite-offset-x  $sprite-offset-y;
}

@mixin sprite-image($sprite) {
  $sprite-image: nth($sprite, 9);
  background-image: url(#{$sprite-image});
}

@mixin sprite($sprite) {
  @include sprite-image($sprite);
  @include sprite-position($sprite);
  @include sprite-width($sprite);
  @include sprite-height($sprite);
}

// The `retina-sprite` mixin sets up rules and a media query for a sprite/retina sprite.
//   It should be used with a "retina group" variable.
//
// The media query is from CSS Tricks: https://css-tricks.com/snippets/css/retina-display-media-query/
//
// $icon-home-group: ('icon-home', $icon-home, $icon-home-2x, );
//
// .icon-home {
//   @include retina-sprite($icon-home-group);
// }
@mixin sprite-background-size($sprite) {
  $sprite-total-width: nth($sprite, 7);
  $sprite-total-height: nth($sprite, 8);
  background-size: $sprite-total-width $sprite-total-height;
}

@mixin retina-sprite($retina-group) {
  $normal-sprite: nth($retina-group, 2);
  $retina-sprite: nth($retina-group, 3);
  @include sprite($normal-sprite);

  @media (-webkit-min-device-pixel-ratio: 2),
         (min-resolution: 192dpi) {
    @include sprite-image($retina-sprite);
    @include sprite-background-size($normal-sprite);
  }
}

// The `sprites` mixin generates identical output to the CSS template
//   but can be overridden inside of SCSS
//
// @include sprites($spritesheet-sprites);
@mixin sprites($sprites) {
  @each $sprite in $sprites {
    $sprite-name: nth($sprite, 10);
    .#{$sprite-name} {
      @include sprite($sprite);
    }
  }
}

// The `retina-sprites` mixin generates a CSS rule and media query for retina groups
//   This yields the same output as CSS retina template but can be overridden in SCSS
//
// @include retina-sprites($retina-groups);
@mixin retina-sprites($retina-groups) {
  @each $retina-group in $retina-groups {
    $sprite-name: nth($retina-group, 1);
    .#{$sprite-name} {
      @include retina-sprite($retina-group);
    }
  }
}
